// Code generated by MockGen. DO NOT EDIT.
// Source: app/repositories/products_repository.go
//
// Generated by this command:
//
//	mockgen -source=app/repositories/products_repository.go -destination=app/repositories/mocks/products_mock.go -package=repo_mock
//

// Package repo_mock is a generated GoMock package.
package repo_mock

import (
	reflect "reflect"

	models "github.com/mytheresa/go-hiring-challenge/app/models"
	gomock "go.uber.org/mock/gomock"
)

// MockProductRepository is a mock of ProductRepository interface.
type MockProductRepository struct {
	ctrl     *gomock.Controller
	recorder *MockProductRepositoryMockRecorder
	isgomock struct{}
}

// MockProductRepositoryMockRecorder is the mock recorder for MockProductRepository.
type MockProductRepositoryMockRecorder struct {
	mock *MockProductRepository
}

// NewMockProductRepository creates a new mock instance.
func NewMockProductRepository(ctrl *gomock.Controller) *MockProductRepository {
	mock := &MockProductRepository{ctrl: ctrl}
	mock.recorder = &MockProductRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductRepository) EXPECT() *MockProductRepositoryMockRecorder {
	return m.recorder
}

// GetAllProducts mocks base method.
func (m *MockProductRepository) GetAllProducts(page, limit int, category string, priceLt float64) ([]models.Product, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllProducts", page, limit, category, priceLt)
	ret0, _ := ret[0].([]models.Product)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetAllProducts indicates an expected call of GetAllProducts.
func (mr *MockProductRepositoryMockRecorder) GetAllProducts(page, limit, category, priceLt any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllProducts", reflect.TypeOf((*MockProductRepository)(nil).GetAllProducts), page, limit, category, priceLt)
}

// GetProductDetails mocks base method.
func (m *MockProductRepository) GetProductDetails(id uint64) (*models.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductDetails", id)
	ret0, _ := ret[0].(*models.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductDetails indicates an expected call of GetProductDetails.
func (mr *MockProductRepositoryMockRecorder) GetProductDetails(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductDetails", reflect.TypeOf((*MockProductRepository)(nil).GetProductDetails), id)
}
